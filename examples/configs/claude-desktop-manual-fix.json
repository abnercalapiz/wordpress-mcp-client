{
  "mcpServers": {
    "wordpress-newcastle-seo": {
      "command": "node",
      "args": [
        "-e",
        "const https = require('https'); const url = require('url'); process.stdin.on('data', (data) => { try { const req = JSON.parse(data); if (req.method === 'initialize') { console.log(JSON.stringify({jsonrpc: '2.0', id: req.id, result: {protocolVersion: '0.1.0', capabilities: {tools: ['search', 'business', 'contact', 'services']}}})); } else if (req.method === 'tools/list') { console.log(JSON.stringify({jsonrpc: '2.0', id: req.id, result: [{name: 'search'}, {name: 'business'}, {name: 'contact'}, {name: 'services'}]})); } else if (req.method === 'tools/call') { const endpoint = req.params.name; const baseUrl = 'https://www.newcastleseo.com.au/wp-json/llmr/mcp/v1'; let options = url.parse(`${baseUrl}/${endpoint}`); options.method = endpoint === 'search' ? 'POST' : 'GET'; if (endpoint === 'search') { options.headers = {'Content-Type': 'application/json'}; } const request = https.request(options, (res) => { let body = ''; res.on('data', (chunk) => body += chunk); res.on('end', () => { console.log(JSON.stringify({jsonrpc: '2.0', id: req.id, result: JSON.parse(body)})); }); }); if (endpoint === 'search' && req.params.arguments) { request.write(JSON.stringify(req.params.arguments)); } request.end(); } } catch (e) { console.error(e); } });"
      ]
    }
  }
}